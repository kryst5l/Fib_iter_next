1. 使用c和c++编写，并使用了多种编译器进行测试，保证源代码的可移植性
2. 支持多种操作系统
3. 为多种编程语言提供可API
4. 支持多线程，充分利用CPU资源
优化的SQL查询算法，有效的提高查询速度
5. 提供多语言支持，常见的编码如：GB2312、BIG5、UTF8
6. 提供TCP/IP、ODBC和JDBC等多种数据库连接途径
提供用于管理、检查、优化数据库操作的管理工具
7. 大型的数据库。可以处理拥有上千万条记录的大型数据库
8.支持多种存储引擎
9. MySQL软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择MySQL作为网站数据库
10. MySQL使用标准的SQL数据语言形式
11. Mysql是可以定制的，采用GPL协议，你可以修改源码来开发自己的MySQL系统
12. 在线DDL更改功能
13. 复制全局事务标识
14. 复制无崩溃从机
15.复制多线程从机



1. Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。
2. Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，在set，hash等数据结构的存储。
3. Redis支持数据的备份，即master-slave模式的数据备份
4. 性能极高- Redis能读的速度是110000次/s，写的速度是81000次/s
5. 丰富的数据类型-Redis支持二进制案例的Strings,Lists,Hashes,Setes及Ordered Sets数据类型操作。
6. 原子 - Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。
7. 丰富的特性 - Redis还支持publish/subscribe,通知，key过期等等特性。



1. 模式自由：可以把不同结构的文档存储在同一个数据库里
2. 面向集合的存储：适合存储JSON风格文件的形式
3. 完整的索引支持，对任何属性可索引
4. 复制和高可用性：支持服务器之间的数据复制，支持主-从模式及服务器之间的相互复制。复制的主要目的是提供冗余及自动故障转移
5. 自动分片：支持水平的数据库集群，可动态添加额外的机器
6.丰富的查询：支持丰富的查询表达方式，查询指令使用JSON形式额标记，可轻易查询文档中的内嵌的对象及数组
7. 快速就地更新：查询优化器会分析查询表达式，并生成一个高效的查询计划
8.高效的传统存储方式：支持二进制数据及大型对象




MongoDB适用于
①网站数据：适合实时的插入，更新与查询，并具备网站实时数据存储所需对的复制及高度伸缩性；
②缓存：由于性能很高，也适合作为信息基础设施的缓存层，在系统重启之后，搭建的持久化缓存可以避免下层的数据源过载；
③大尺寸、低价值的数据也是MongoDB的最佳选择，使用传统的关系数据库存储一些数据时可能会比较贵，再次之前很多程序员往往会选择传统的文件进行存储
④高伸缩的场景，非常是个由数十或者数百台服务器组成的数据库
⑤用于对象及json数据的存储，MongoDB的bson数据格式非常适合文档格式化的存储及查询。
而mysql还是更加适用于
①高度事务性的系统。例如银行或者会计系统，传统的关系型数据库目前还是更实用于需要大量原子性复杂事务的应用程序
②传统的商业智能应用，针对特定问题的BI数据库会对产生高度优化的查询方式，对于此类应用，数据仓库可能是更合适的选择
Redis应用场景：
1. 用来做缓存-redis的所有数据时放在内存中的
2. 可以在某些特定应用场景下替代传统数据库--比如社交类的应用
3. 在一些大型系统中，巧妙的实现一些特定的功能：session共享、购物车
4. MongoDB不支持SQL语句
